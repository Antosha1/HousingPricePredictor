default:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  before_script:
    - apk update
    - apk add python3
    - apk add py3-pip
    - apk add make
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - base64 -d $seml_key > .dvc_files/seml-antosha1-1b90002c400c.json
    - pip3 install -U sphinx

stages: 
  - build
  - test
  - release
  - deploy
  - train

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE/mylib_test_image:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/mylib_release_image:latest
 
build:
  stage: build
  tags: 
    - local
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

train_reg_model:
  stage: train
  tags:
    - local
  script: docker run -v $(pwd)/.dvc_files:/app/.dvc_files $CONTAINER_TEST_IMAGE make train
  retry: 1

test_sphinx:
  stage: test
  tags:
    - local
  script:
    - sphinx-build -b html ./docs/source ./public
  only:
    - branches
  except:
    - master
  retry: 1

test_pytest:
  stage: test
  tags: 
    - local
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -v $(pwd)/.dvc_files:/app/.dvc_files $CONTAINER_TEST_IMAGE make test
  artifacts:
    when: always
    reports:
      junit: report.xml
  retry: 1

test_makefile:
  stage: test
  tags:
    - local
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE make clean
    - docker run $CONTAINER_TEST_IMAGE make predict
  only:
    - develop
  except:
    - master
  retry: 1

pages:
  stage: deploy
  tags:
    - local
  script:
    - sphinx-build -b html ./docs/source ./public
  artifacts:
    paths:
      - public
  only:
    - master

release-image:
  stage: release
  tags:
    - local
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
